{"version":3,"sources":["helpers/generateUiElements.js","menu.svg","components/sidebar/index.js","helpers/reOrderFn.js","components/renderPlace/index.js","serviceWorker.js","index.js","helpers/styleFn.js"],"names":["returnRespectiveHtmlElement","type","defaultValue","className","generateElement","id","uiElement","element","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","viewBox","focusable","role","ref","ForwardRef","forwardRef","SideBarRender","sidebarElements","droppableId","provided","snapshot","innerRef","style","getSidebarListStyle","isDraggingOver","map","item","index","draggableId","draggableProps","dragHandleProps","getSidebarItemStyle","isDragging","placeholder","reOrderWithInSameArea","state","sourceId","destinationId","updatedValue","splice","movedElement","DroppablePlace","React","lazy","initialElements","RenderPlace","useState","setSideBarElements","droppedElements","setDroppedElements","useEffect","previousElements","JSON","parse","localStorage","getItem","onDragEnd","result","destination","selectedElementType","reOrderedValue","newHtmlElement","valueAfterElementInsertion","generatedElement","reOrderWithOtherArea","fallback","onClick","setItem","stringify","alert","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","background","padding","width","draggableStyle","userSelect","color","getDraggableItemStyle","grid","margin"],"mappings":"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","file":"static/js/main.43a7afd3.chunk.js","sourcesContent":["import React from 'react';\n\nexport const returnRespectiveHtmlElement = (type) => {\n  switch (type) {\n    case \"button\":\n      return <button>I'm button</button>\n    case \"input\":\n      return <input defaultValue=\"i'm input\" />\n    case \"textarea\":\n      return <textarea defaultValue=\"i'm text area\" />\n    case \"box\":\n      return <div className=\"box\" />\n    case \"heading\":\n      return <h1>Heading1</h1>\n    default:\n      return <></>\n  }\n}\n\nexport const generateElement = (type, id) => {\n  let uiElement = {};\n  uiElement.id = `${id}`;\n  uiElement.element = type;\n\n  return uiElement;\n}\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z\"\n});\n\nvar SvgMenu = function SvgMenu(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 10 10\",\n    focusable: \"false\",\n    role: \"presentation\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenu, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu.6ac51f04.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { getSidebarListStyle, getSidebarItemStyle } from '../../helpers/styleFn.js';\nimport {ReactComponent as Menu} from '../../menu.svg';\nimport './sidebar.css';\n\nconst SideBarRender = ({\n    sidebarElements\n}) => {\n    return (\n       <div className=\"sidebar-wrapper\">\n        <Droppable droppableId=\"sidebar\">\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    style={getSidebarListStyle(snapshot.isDraggingOver)}>\n                    {sidebarElements?.map((item, index) => (\n                        <Draggable\n                            key={item.id}\n                            draggableId={item.id}\n                            index={index}>\n                            {(provided, snapshot) => (\n                                <div\n                                   className=\"sidebar-element\"\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getSidebarItemStyle(\n                                        snapshot.isDragging,\n                                        provided.draggableProps.style\n                                    )}>\n                                      <Menu/>\n                                    {item.element}\n                                </div>\n                            )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n        </div> \n    )\n}\n\nexport default SideBarRender;","\nexport const reOrderWithInSameArea = (state,sourceId,destinationId) => {\n  let updatedValue = [...state];\n  const [movedElement] = updatedValue.splice(sourceId,1)\n  updatedValue.splice(destinationId, 0, movedElement);\n  return updatedValue;\n}\n\n/**\n * @param generatedElement -> holds the new element that is generated after successful drag and drop\n */\n\nexport const reOrderWithOtherArea = (state,destinationId,generatedElement) => {\n  let updatedValue = [...state];\n  updatedValue.splice(destinationId, 0, generatedElement);\n  return updatedValue;\n}\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport SideBarRender from '../sidebar';\nimport { reOrderWithInSameArea, reOrderWithOtherArea } from '../../helpers/reOrderFn';\nimport { generateElement } from '../../helpers/generateUiElements';\nimport './renderPlace.css'\nconst DroppablePlace = React.lazy(() => import('../droppablePlace'));\n\n\nconst initialElements = [\n    { id: 'button', element: \"Button\" },\n    { id: 'input', element: \"Input Box\" },\n    { id: 'textarea', element: \"Textarea\" },\n    { id: 'box', element: \"Box\" },\n    { id: 'heading', element: \"Heading\" }\n]\n\nconst RenderPlace = () => {\n    const [sidebarElements, setSideBarElements] = useState(initialElements);\n    const [droppedElements, setDroppedElements] = useState([]);\n\n    useEffect(() => {\n        const previousElements = JSON.parse(localStorage.getItem(\"movedElements\"));\n        if (previousElements && previousElements?.length) {\n            setDroppedElements(previousElements);\n        }\n    }, [])\n\n    const onDragEnd = result => {\n        const { source, destination, draggableId: selectedElementType } = result;\n\n        if (!destination) return;\n\n        if (source.droppableId === destination.droppableId) {\n            let reOrderedValue;\n            if (source.droppableId === 'sidebar') { \n                //handle drop inside sidebar\n                reOrderedValue = reOrderWithInSameArea(sidebarElements, source.index, destination.index)\n                setSideBarElements(reOrderedValue);\n            }\n            else {\n                reOrderedValue = reOrderWithInSameArea(droppedElements, source.index, destination.index)\n                setDroppedElements(reOrderedValue);\n            }\n\n        } else { \n            //handle drop into droppable area\n            const newHtmlElement = generateElement(selectedElementType, droppedElements.length);\n            let valueAfterElementInsertion = reOrderWithOtherArea(droppedElements, destination.index, newHtmlElement);\n            setDroppedElements(valueAfterElementInsertion);\n\n        };\n    }\n\n    const handleSave = () => {\n        if(droppedElements?.length){\n            localStorage.setItem('movedElements', JSON.stringify(droppedElements))\n            alert('Elements Saved!')\n        }\n       \n    }\n\n    const handleClear = () => {\n        setDroppedElements([]);\n        localStorage.removeItem('movedElements')\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"render-wrapper\">\n                <SideBarRender sidebarElements={sidebarElements} />\n                <Suspense fallback={<div>DroppablePlace loading...</div>}>\n                 <DroppablePlace droppedElements={droppedElements} />\n                </Suspense>\n            </div>\n\n            <div className=\"btn-wrapper\">\n                <button onClick={handleSave} className=\"save-btn\">Save</button>\n                <button onClick={handleClear} className=\"clear-btn\">Clear</button>\n            </div>\n\n        </DragDropContext>\n    );\n}\n\nexport default RenderPlace\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RenderPlace from './components/renderPlace';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RenderPlace />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nconst grid = 8\n\nexport const getSidebarListStyle = isDraggingOver => ({\n    background: '#2E3648',\n    padding: grid,\n    width: 250\n});\n\nexport const getSidebarItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: 'none',\n    padding:'10px',\n    color: isDragging&&'grey',\n    background: isDragging && '#B2F5EA',\n    ...draggableStyle\n});\n\n\nexport const getDraggableItemStyle = (isDragging, draggableStyle) => ({\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    background: isDragging && '#B2F5EA' ,\n    ...draggableStyle\n});\n\n"],"sourceRoot":""}